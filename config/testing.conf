# testing.conf - Configuration des tests pour git-mirror (consolidé)

# Paramètres de test
TESTING_CONFIG=(
    "FRAMEWORK:bats"
    "COVERAGE:false"
    "PARALLEL:true"
    "VERBOSE:false"
)

# Répertoires de test
TEST_DIRS=(
    "tests/unit"
    "tests/integration"
    "tests/load"
)

# Fichiers de test
TEST_FILES=(
    "tests/unit/test_*.bats"
    "tests/integration/test_integration.sh"
    "tests/load/test_load.sh"
)

# Paramètres de couverture
COVERAGE_CONFIG=(
    "ENABLED:false"
    "THRESHOLD:80"
    "FORMAT:html"
    "OUTPUT:coverage/"
)

# Paramètres de performance
PERFORMANCE_CONFIG=(
    "BENCHMARK:true"
    "PROFILE:false"
    "MEMORY_CHECK:true"
    "LOAD_TEST:true"
)

# Paramètres de test détaillés
TEST_PARAMS=(
    "LOAD_TEST_REPOS:50"
    "LOAD_TEST_PARALLEL:5"
    "LOAD_TEST_TIMEOUT:300"
    "INTEGRATION_TEST_TIMEOUT:600"
)

# Variables d'environnement pour les tests
TEST_ENV=(
    "GIT_MIRROR_TEST_MODE=true"
    "GIT_MIRROR_TEST_DIR=/tmp/git-mirror-test"
    "GIT_MIRROR_TEST_CACHE=/tmp/git-mirror-test-cache"
    "GIT_MIRROR_TEST_STATE=/tmp/git-mirror-test-state"
)

# Commandes de test
TESTING_COMMANDS=(
    "unit:bats tests/unit/"
    "integration:bash tests/integration/test_integration.sh"
    "load:bash tests/load/test_load.sh --dry-run"
    "all:make test"
)

# Vérifications de test
TESTING_CHECKS=(
    "shellcheck:shellcheck git-mirror.sh lib/*/*.sh config/*.sh"
    "bats:bats --version"
    "coverage:lcov --version"
    "valgrind:valgrind --version"
)

# Validation du code
VALIDATION_COMMANDS=(
    "shellcheck:shellcheck git-mirror.sh lib/*/*.sh config/*.sh"
    "markdownlint:markdownlint README.md docs/*.md"
    "bash:bash -n git-mirror.sh"
)