name: ShellCheck

on: 
  push:
    paths:
      - '**.sh'
      - '.github/workflows/shellcheck.yml'
  pull_request:
    paths:
      - '**.sh'
      - '.github/workflows/shellcheck.yml'
  workflow_dispatch:

# Masquer automatiquement les secrets
env:
  ACTIONS_STEP_DEBUG: false

jobs:
  shellcheck:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Cache ShellCheck
        id: cache-shellcheck
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/shellcheck
            /usr/bin/shellcheck
          key: ${{ runner.os }}-shellcheck-latest
          restore-keys: |
            ${{ runner.os }}-shellcheck-
      
      - name: Install ShellCheck
        if: steps.cache-shellcheck.outputs.cache-hit != 'true'
        run: |
          echo "=== Installation de ShellCheck ==="
          sudo apt-get update -qq
          sudo apt-get install -y shellcheck
          echo "✅ ShellCheck version: $(shellcheck --version)"
      
      - name: Run ShellCheck on main script
        continue-on-error: true
        run: |
          echo "=== ShellCheck sur le script principal ==="
          shellcheck -x git-mirror.sh || echo "⚠️ ShellCheck with warnings (non-critical)"
      
      - name: Run ShellCheck on modules
        continue-on-error: true
        run: |
          echo "=== ShellCheck sur tous les modules ==="
          echo "Checking lib modules..."
          find lib -name "*.sh" -type f -exec sh -c 'shellcheck -x "$1" || true' _ {} \;
          echo "Checking config modules..."
          find config -name "*.sh" -type f -exec sh -c 'shellcheck -x "$1" || true' _ {} \;
          echo "✅ ShellCheck terminé (avec warnings non bloquants)"
      
      - name: Run ShellCheck on tests
        continue-on-error: true
        run: |
          echo "=== ShellCheck sur les tests ==="
          find tests -name "*.bats" -type f -exec sh -c 'shellcheck "$1" || true' _ {} \;
          echo "✅ Tests ShellCheck terminé"
          find tests -name "*.sh" -type f -exec shellcheck {} \;
      
      - name: Upload ShellCheck results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: shellcheck-results
          path: |
            shellcheck-results.txt
            *.log
          retention-days: 30
          compression-level: 9
          if-no-files-found: ignore
      
      - name: Summary
        if: success()
        run: echo "=== ShellCheck terminé avec succès ==="
