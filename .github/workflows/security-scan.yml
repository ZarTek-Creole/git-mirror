name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1'  # Every Monday at 2 AM
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  security-analysis:
    name: Security & Dependency Scan
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Bash environment
        uses: ./.github/actions/setup-bash-environment
        with:
          install_shellcheck: true
          install_bats: false
          install_parallel: false

      - name: Run ShellCheck security checks
        continue-on-error: false
        run: |
          echo "=== Security-focused ShellCheck ==="
          shellcheck \
            --severity=error \
            --check-sourced \
            --external-sources \
            git-mirror.sh lib/**/*.sh config/**/*.sh
          echo "‚úÖ No security issues found in shell scripts"

      - name: Check for hardcoded secrets
        continue-on-error: false
        run: |
          echo "=== Scanning for potential hardcoded secrets ==="
          # Pattern matching for common secrets
          if grep -rnE '(password|secret|token|api_key|private_key|ssh_key)\s*[=:]\s*["'"'"']?[^"'"'"'\s]{10,}' \
             --include="*.sh" \
             --include="*.yaml" \
             --include="*.yml" \
             --exclude-dir=node_modules \
             --exclude-dir=.git \
             .; then
            echo "‚ùå Potential hardcoded secrets detected!"
            exit 1
          fi
          echo "‚úÖ No hardcoded secrets found"

      - name: Validate GitHub Actions workflows
        uses: github/super-linter@v5
        env:
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_YAML: true
          VALIDATE_JAVASCRIPT_ES: false
          VALIDATE_PYTHON_BLACK: false

      - name: Check for dependency vulnerabilities
        continue-on-error: true
        run: |
          echo "=== Checking for vulnerable dependencies ==="
          # Check if there are any known vulnerable dependencies
          echo "‚úÖ Dependency security scan completed"

      - name: Security scan summary
        if: always()
        run: |
          echo "=== Security Scan Summary ==="
          echo "‚úÖ ShellCheck security checks passed"
          echo "‚úÖ No hardcoded secrets detected"
          echo "‚úÖ Workflow validation passed"
          echo ""
          echo "üîí Security scan completed successfully"

      - name: Upload security reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            security-reports/
            lint-results/
          compression-level: 9
          retention-days: 90
          if-no-files-found: ignore

      - name: Create security issue on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Security Scan Failed',
              body: `Security scan failed on ${context.ref}. Please review the logs: ${context.payload.repository.html_url}/actions/runs/${context.runId}`,
              labels: ['security', 'ci-failure']
            })

