name: Integration Tests

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM
  workflow_dispatch:

# Masquer automatiquement les secrets
env:
  ACTIONS_STEP_DEBUG: false

jobs:
  setup:
    uses: ./.github/workflows/reusable-setup-dependencies.yml
    with:
      install_shellcheck: true
      install_bats: true
      install_kcov: false
      install_markdownlint: false
      install_pandoc: false
      install_shellspec: false

  integration:
    needs: setup
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm-global
          /usr/local/bin/bats
        key: ${{ runner.os }}-integration-deps-${{ hashFiles('**/*.sh') }}
        restore-keys: |
          ${{ runner.os }}-integration-deps-
    
    - name: Setup Bash environment
      uses: ./.github/actions/setup-bash-environment
      with:
        install_shellcheck: true
        install_bats: true
        install_parallel: true
    
    - name: Run integration tests with real API
      timeout-minutes: 15
      env:
        GITHUB_TOKEN: ${{ secrets.INTEGRATION_TEST_TOKEN }}
      run: |
        # Masquer le token dans les logs
        echo "Token length: ${#GITHUB_TOKEN}"
        
        # Test with real GitHub API calls with retry
        for attempt in {1..3}; do
          echo "Attempt $attempt of 3"
          if bash git-mirror.sh --dry-run -v users microsoft --parallel 3; then
            break
          fi
          [ $attempt -lt 3 ] && sleep 10
        done
        
        # Test authentication
        bash git-mirror.sh --dry-run -v users microsoft --parallel 1
        
        # Test error handling
        bash git-mirror.sh --dry-run -v users nonexistent-user || true
    
    - name: Run load tests
      timeout-minutes: 10
      continue-on-error: true
      run: |
        if [ -f tests/load/test_load.sh ]; then
          bash tests/load/test_load.sh --dry-run --repos 50 --parallel 5 --timeout 300
        else
          echo "⚠️ Load tests not found"
        fi
    
    - name: Benchmark performance
      timeout-minutes: 10
      run: |
        mkdir -p test-results
        echo "=== Performance Benchmark ===" > test-results/benchmark.txt
        echo "Date: $(date)" >> test-results/benchmark.txt
        echo "OS: $(uname -a)" >> test-results/benchmark.txt
        echo "Bash version: $(bash --version | head -1)" >> test-results/benchmark.txt
        echo "Git version: $(git --version)" >> test-results/benchmark.txt
        echo "jq version: $(jq --version)" >> test-results/benchmark.txt
        echo "parallel version: $(parallel --version | head -1)" >> test-results/benchmark.txt
        echo "" >> test-results/benchmark.txt
        
        # Sequential test
        echo "Sequential test:" >> test-results/benchmark.txt
        timeout 300 bash -c "time bash git-mirror.sh --dry-run -v users microsoft --parallel 1" >> test-results/benchmark.txt 2>&1 || true
        
        # Parallel test
        echo "Parallel test (5 jobs):" >> test-results/benchmark.txt
        timeout 300 bash -c "time bash git-mirror.sh --dry-run -v users microsoft --parallel 5" >> test-results/benchmark.txt 2>&1 || true
        
        cat test-results/benchmark.txt
    
    - name: Upload benchmark results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: test-results/benchmark.txt
        retention-days: 90
        compression-level: 9
        if-no-files-found: ignore
